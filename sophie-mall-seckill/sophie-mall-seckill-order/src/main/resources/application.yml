server:
  port: 8093

spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  data:
    redis:
      host: localhost
      database: 0
      port: 6379
      password: 12345678
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 200
          max-idle: 10
          max-wait: -1ms

  shardingsphere:
    datasource:
      names: ds0, ds1, ds2
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/seckill_order_0?useUnicode=true&characterEncoding=UTF-8&connectTimeout=2000&socketTimeout=5000
        username: sophie
        password: 12345678

      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/seckill_order_1?useUnicode=true&characterEncoding=UTF-8&connectTimeout=2000&socketTimeout=5000
        username: sophie
        password: 121345678

      ds2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/seckill_order_2?useUnicode=true&characterEncoding=UTF-8&connectTimeout=2000&socketTimeout=5000
        username: sophie
        password: 121345678
    sharding:
      tables:
        seckill_user_order:
          database-strategy:
            inline:
              sharding-column: user_id
              algorithm-expression: ds$->{user_id % 3}
          actualDataNodes: ds${0..2}.seckill_user_order_${0..2}
          tableStrategy:
            inline:
              shardingColumn: user_id
              algorithm-expression: seckill_user_order_${user_id % 3}
        seckill_goods_order:
          database-strategy:
            inline:
              sharding-column: goods_id
              algorithm-expression: ds$->{goods_id % 3}
          actualDataNodes: ds${0..2}.seckill_goods_order_${0..2}
          tableStrategy:
            inline:
              shardingColumn: goods_id
              algorithm-expression: seckill_goods_order_${goods_id % 3}
    props:
      sql:
        show: false

jdbc:
  url: jdbc:mysql://localhost:3306/seckill_order?useUnicode=true&characterEncoding=UTF-8&connectTimeout=2000&socketTimeout=5000
  username: sophie
  password: 12345678
  initialSize: 5
  minIdle: 10
  maxActive: 30
  maxWait: 60000
  testWhileIdle: true
  timeBetweenEvictionRunsMillis: 10000
  testOnBorrow: false
  testOnReturn: false
  validationQuery: select 1
  dbType: mysql
  filters: stat

#分布式锁
distributed:
  cache:
    type: redis
  lock:
    type: redisson

# 本地缓存
local:
  cache:
    type: caffeine

mybatis:
  mapper-locations:
    - classpath:dao/*.xml
    - classpath*:com/**/mapper/*.xml

place:
  order:
    type: bucket

dubbo:
  registry:
    address: nacos://localhost:8848?register-consumer-url=true
    register-mode: instance
  protocol:
    name: dubbo
    port: 20880
  application:
    name: mall-seckill-order
  scan:
    base-packages: com.sophie.sophiemall.seckill

rocketmq:
  producer:
    endpoints: localhost:8081
    access-key: sophie
    secret-key: 12345678
    topic: topic_event_rocketmq_order

  simple-consumer:
    access-key: sophie
    secret-key: 12345678
    endpoints: localhost:8081
